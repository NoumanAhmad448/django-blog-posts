name: Deployment

on:
  push:
    branches: ["master"]
jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DEFAULT_DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DEFAULT_DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DEFAULT_DATABASE_NAME }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Check Python version
        run: python --version

      - name: Create Virtual Env
        run: |
          virtualenv test-django3
          source /opt/python-venv/test-django3/bin/activate

      - name: copy settings.py and .env files
        run: |
          cp copy_setting.py settings.py
          cp .env.backup .env

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run Migrations
        run: python manage.py migrate

      - name: Run Test
        run: python manage.py test

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{secrets.FTP_SERVER}}
          username: ${{secrets.FTP_USERNAME}}
          password: ${{secrets.FTP_PASS}}
          server-dir: /
          git-ftp-args: "--all"

      - name: Running Scripts
        uses: appleboy/ssh-action@master
        with:
          username: ${{secrets.SSH_USERNAME}}
          host: ${{secrets.SERVER_IP}}
          password: ${{ secrets.SSH_PASSWORD }}
          script: "cd /home/usmansaleem234/public_html/test-django/blog_posts && chmod u+x ./server_deploy.sh && ./server_deploy.sh"
